// <auto-generated />
using System;
using Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infra.Data.Migrations
{
    [DbContext(typeof(DeliveryDbContext))]
    partial class DeliveryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Domain.Comida.Models.Ingrediente", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<ulong>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("descricao");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("marca");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("nome");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int")
                        .HasColumnName("quantidade");

                    b.Property<int>("TipoItem")
                        .HasColumnType("int")
                        .HasColumnName("tipo_item");

                    b.Property<string>("UnidadeMedida")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("unidade_medida");

                    b.Property<decimal>("ValorPago")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("valor_pago");

                    b.HasKey("Id");

                    b.ToTable("ingrediente", (string)null);
                });

            modelBuilder.Entity("Domain.Comida.Models.ItemExtra", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<ulong>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("descricao");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("marca");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("nome");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int")
                        .HasColumnName("quantidade");

                    b.Property<int>("TipoItem")
                        .HasColumnType("int")
                        .HasColumnName("tipo_item");

                    b.Property<string>("UnidadeMedida")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("unidade_medida");

                    b.Property<decimal>("ValorPago")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("valor_pago");

                    b.HasKey("Id");

                    b.ToTable("item_extra", (string)null);
                });

            modelBuilder.Entity("Domain.Comida.Models.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<ulong>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.Property<decimal>("CustoVariavel")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("custo_variavel");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("descricao");

                    b.Property<decimal>("Impostos")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("impostos");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("nome");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int")
                        .HasColumnName("quantidade");

                    b.Property<decimal>("TaxaCartao")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("taxa_cartao");

                    b.Property<string>("UnidadeMedida")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("unidade_medida");

                    b.Property<decimal>("ValorPago")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("valor_pago");

                    b.Property<decimal>("ValorVenda")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("valor_venda");

                    b.HasKey("Id");

                    b.ToTable("produto", (string)null);
                });

            modelBuilder.Entity("Domain.Comida.Models.ProdutoComposicao", b =>
                {
                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ItemExtraId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("quantidade");

                    b.Property<int>("TipoItem")
                        .HasColumnType("int")
                        .HasColumnName("tipo_item");

                    b.Property<int>("UnidadeMedida")
                        .HasColumnType("int")
                        .HasColumnName("unidade_medida");

                    b.HasKey("ProdutoId", "ItemId");

                    b.HasIndex("ItemExtraId");

                    b.HasIndex("ItemId");

                    b.ToTable("produto_composicao", (string)null);
                });

            modelBuilder.Entity("Domain.Comida.Models.ProdutoIfood", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("ativo");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Descricao")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("descricao");

                    b.Property<string>("Marca")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("marca");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("nome");

                    b.Property<decimal>("TaxaPlano")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("taxa_plano");

                    b.Property<decimal>("TaxaRepasse")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("taxa_repasse");

                    b.Property<decimal>("TaxaTransacao")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("taxa_transacao");

                    b.Property<int>("UnidadeMedida")
                        .HasColumnType("int")
                        .HasColumnName("unidade_medida");

                    b.Property<decimal>("ValorPago")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor_pago");

                    b.HasKey("Id");

                    b.ToTable("produto_ifood", (string)null);
                });

            modelBuilder.Entity("Domain.Comida.Models.ProdutoComposicao", b =>
                {
                    b.HasOne("Domain.Comida.Models.ItemExtra", "ItemExtra")
                        .WithMany()
                        .HasForeignKey("ItemExtraId");

                    b.HasOne("Domain.Comida.Models.Ingrediente", "Ingrediente")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Comida.Models.Produto", "Produto")
                        .WithMany("Composicao")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingrediente");

                    b.Navigation("ItemExtra");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Domain.Comida.Models.Produto", b =>
                {
                    b.Navigation("Composicao");
                });
#pragma warning restore 612, 618
        }
    }
}
